#
# This was designed for Visual Studio 6.0
#
# $Revision: 1.3 $
#
# Common makefile definitions and rules for Visual C++ 6.0
#
# Note that this is an nmake file so we can make use of win32.mak,
# but we do assume that cygwin exists and call things like 'rm' and 'cp'.
#
# Since this file contains rules, any makefile that includes it should
# have a default: target preceeding this file.
#

# need to use features added starting with Windows98

# the usual output directories
BINDIR = ..\..\bin
LIBDIR = ..\..\lib
INCDIR = ..\..\include

# A common bin directory known to be on the PATH environment variable.
# The BINDIR directory is normally under the muse development and not
# necessarily on the path.
HOMEBINDIR = ..\..\..\..\bin

# Target both NT and 95/98
# Don't really need to do this any more, not sure what would happen
# if it was taken out.
# !! I'll tell you, it fucks up winsock.  If you take this out, then 
# including winsock.h causes conflicts with winsock2.h which is included
# through mysterious channels.  util/TcpConnection.cpp fails to compile.
# Probably you don't need winsock.h if this is off, just use normal posix?
TARGETOS=BOTH

# Target IE 4.0
#_WIN32_IE=0x0400

# need some newer stuff defined in W2K minimum
# one comment says: 0x0400 is for Windows NT 4.0. For Windows 2000 use 0x0500
# another says: 
#    A general rule with WINVER: < 0x0500 means it is the version of
#    the 9x serius, > 0x0500 means it is the version of the NT serius.
# setting this directly doesn't work
#WINVER=0x0500

# Enable features for NT 4.0 & 95/98 with DCOM
APPVER=4.0

# Enable features for 98, 2k
# !! ugh, causes annoying warning messages, just go copy the constants
# for now
# need a more recent version of the platform SDK or get the damn
# thing to build under VS 7.0
#APPVER=5.0

!include <win32.mak>

# add -GX so we can throw exceptions
# Note we end up with msvcrt.lib so we're NOT linking with the
# debug runtime library.  Apps will have to do the same.
# Debugging is always on, need to conditionalize this someday
# winmm.lib is required for multimedia stuff, msvcprt for standard C++
# shell32.lib is for SHBrowseForFolder

DLL_CFLAGS	= -GX $(cflags) $(cdebug) $(cvarsdll)
DLL_LFLAGS	= $(dlllflags) $(ldebug)
DLL_SYSLIBS	= $(guilibsdll) $(olelibsdll) winmm.lib comctl32.lib msvcprt.lib shell32.lib
EXE_CFLAGS	= -GX $(cflags) $(cdebug) $(cvarsdll)
EXE_SYSLIBS	= $(conlibsdll) winmm.lib comctl32.lib msvcprt.lib shell32.lib
EXE_LFLAGS	= $(conlflags) $(ldebug)
WIN_LFLAGS	= $(winlflags) $(ldebug) 

# jsl - FIXED:NO added for Quantify/Purify
EXE_LFLAGS	= /FIXED:NO $(EXE_LFLAGS)
DLL_LFLAGS	= /FIXED:NO $(DLL_LFLAGS)

######################################################################
#
# usual targets & rules
#
######################################################################

!ifndef NO_COMMON_CLEAN
clean:
	@-rm -f *~
	@-rm -f *.*~
	@-rm -f *.obj
	@-rm -f *.exe
	@-rm -f *.bak
	@-rm -f *.pdb
	@-rm -f *.lib
	@-rm -f *.exp
	@-rm -f *.res
	@-rm -f *.RES
	@-rm -f *.dll
	@-rm -f *.class
	@-rm -f *.opt
	@-rm -f *.mdp
	@-rm -f *.ilk
	@-rm -f *.manifest
!endif

finish:
	-del /q *~
	-del /q *.*~

oldclean:
	-del /q *~
	-del /q *.*~
	-del /q *.obj
	-del /q *.exe
	-del /q *.bak
	-del /q *.pdb
	-del /q *.lib
	-del /q *.exp
	-del /q *.res
	-del /q *.RES
	-del /q *.dll
	-del /q *.class
	-del /q *.opt
	-del /q *.mdp

svnignore:
	@svn propset svn:ignore -F svnignore .

#
# Standard rules
# NOTE: Historically I always built DLLs though that isn't
# done any more.  Leave DLL_FLAGS for default compilation, 
# it generally doesn't hurt anything.
#
# !! this does not appear to be used
#

.c.obj:
	cl $(DLL_CFLAGS) /c $*.c

.cxx.obj:
	cl $(DLL_CFLAGS) /c $*.cxx

.cpp.obj:
	cl $(DLL_CFLAGS) /c $*.cpp

.rc.res:
	rc -r $*.rc

######################################################################
######################################################################
######################################################################
